name: 'F´ Project Builder Reusable Workflow'

on:
  workflow_call:
    inputs:
      build_location:
        description: "Path to F´ module to build. E.g. MyDeployment/"
        type: string
        required: true
      run_unit_tests:
        description: "Run an additional job in parallel to run unit tests."
        type: boolean
        required: false
        default: true
      fprime_version:
        required: false
        type: string
        description: "F´ version to use. Defaults to project submodule version."
        default: ""
      fprime_location:
        required: false
        type: string
        description: "Relative path from project root to F´ submodule"
        default: "./fprime"
      target_platform:
        required: false
        type: string
        description: "F´ build platform (e.g. Linux, Darwin). Default specified in settings.ini."
        default: ""
      runs_on:
        required: false
        type: string
        description: "runs-on platform. Defaults to ubuntu-latest"
        default: "ubuntu-latest"

jobs:
  build:
    runs-on: ${{ inputs.runs_on }}
    name: "Build"
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - if: ${{ inputs.fprime_version }} != ""
        name: "Checkout F´ Version"
        run: |
          cd ${{ inputs.fprime_location }}
          git checkout ${{ inputs.fprime_version }}
        shell: bash
      - name: "Install requirements.txt"
        run: |
          pip3 install -r ${{ inputs.fprime_location }}/requirements.txt
        shell: bash
      - name: "Generate build cache"
        working-directory: ${{ inputs.build_location }}
        run: |
          fprime-util generate ${{ runner.debug == '1' && '--verbose' || '' }} ${{ inputs.target_platform }}
        shell: bash
      - name: "Build"
        working-directory: ${{ inputs.build_location }}
        run: |
          fprime-util build ${{ runner.debug == '1' && '--verbose' || '' }} ${{ inputs.target_platform }}
        shell: bash

  runUT:
    if: ${{ inputs.run_unit_tests }}
    runs-on: ${{ inputs.runs_on }}
    name: "Unit Tests"
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - if: ${{ inputs.fprime_version }} != ""
        name: "Checkout F´ Version"
        run: |
          cd ${{ inputs.fprime_location }}
          git checkout ${{ inputs.fprime_version }}
        shell: bash
      - name: "Install requirements.txt"
        run: |
          pip3 install -r ${{ inputs.fprime_location }}/requirements.txt
      - name: "Generate UT build cache"
        working-directory: ${{ inputs.build_location }}
        run: |
          fprime-util generate --ut ${{ runner.debug == '1' && '--verbose' || '' }} ${{ inputs.target_platform }}
        shell: bash
      - name: "Build UTs"
        working-directory: ${{ inputs.build_location }}
        run: |
          fprime-util build --ut ${{ runner.debug == '1' && '--verbose' || '' }} ${{ inputs.target_platform }}
        shell: bash
      - name: "Run Unit Tests"
        working-directory: ${{ inputs.build_location }}
        run: |
          fprime-util check ${{ runner.debug == '1' && '--verbose' || '' }} ${{ inputs.target_platform }}
        shell: bash

